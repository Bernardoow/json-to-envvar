{"version":3,"sources":["jsonToEnvvar.jsx","exampleData.js","App.js","reportWebVitals.js","index.js"],"names":["JsonToEnvvar","useState","jsonData","SetJsonData","envVars","SetenvVars","isJsonWithProblem","SetIsJsonWithProblem","useEffect","parsedJson","JSON","parse","_","Object","entries","key","value","transformJsonToEnvvar","className","role","htmlFor","id","onChange","event","target","rows","type","style","onClick","copy","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAyFeA,EArFM,WACnB,MAAgCC,mBCLH,8CDK7B,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkDJ,oBAAS,GAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KA+BA,OArBAC,qBAAU,YACR,WACE,IAAIC,EAAa,GACjB,IACEF,GAAqB,GACrBE,EAAaC,KAAKC,MAAMT,GACxB,MAAOU,GACPL,GAAqB,GAIvB,IADA,IAAIH,EAAU,GACd,MAAyBS,OAAOC,QAAQL,GAAxC,eAAqD,CAAhD,IAAI,EAAJ,oBAAKM,EAAL,KAAUC,EAAV,KACCD,GAAOC,IACTZ,GAAO,UAAOW,EAAP,YAAcC,EAAd,OAGXX,EAAWD,GAEba,KACC,CAACf,IAGF,sBAAKgB,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACGZ,EACC,mBAAGY,UAAU,qBAAqBC,KAAK,QAAvC,mCAIA,GAGF,sBAAKD,UAAU,OAAf,UACE,uBAAOE,QAAQ,OAAOF,UAAU,aAAhC,kBAGA,0BACEA,UAAU,eACVG,GAAG,WACHL,MAAOd,EACPoB,SAhDV,SAAwBC,GACtBpB,EAAYoB,EAAMC,OAAOR,QAgDjBS,KAAK,aAIX,qBAAKP,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uBAAOE,QAAQ,UAAUF,UAAU,aAAnC,qBAGA,yBACEQ,KAAK,SACLR,UAAU,0BACVS,MAAO,CAAE,cAAe,QACxBC,QA1DV,WACEC,IAAKzB,IAqDC,UAME,mBAAGc,UAAU,aAAaS,MAAO,CAAE,gBAAiB,SANtD,UASA,0BACET,UAAU,eACVG,GAAG,UACHL,MAAOZ,EACP0B,UAAQ,EACRL,KAAK,gBEtEFM,MARf,WACE,OACE,qBAAKb,UAAU,kBAAf,SACE,cAAC,EAAD,OCMSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.09a046bd.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { jsonDataExample } from \"./exampleData\";\nimport copy from \"copy-to-clipboard\";\n\nconst JsonToEnvvar = () => {\n  const [jsonData, SetJsonData] = useState(jsonDataExample);\n  const [envVars, SetenvVars] = useState(\"\");\n  const [isJsonWithProblem, SetIsJsonWithProblem] = useState(false);\n\n  function jsonDataChange(event) {\n    SetJsonData(event.target.value);\n  }\n\n  function onClickCopy() {\n    copy(envVars);\n  }\n\n  useEffect(() => {\n    function transformJsonToEnvvar() {\n      let parsedJson = {};\n      try {\n        SetIsJsonWithProblem(false);\n        parsedJson = JSON.parse(jsonData);\n      } catch (_) {\n        SetIsJsonWithProblem(true);\n      }\n\n      let envVars = \"\";\n      for (var [key, value] of Object.entries(parsedJson)) {\n        if (key && value) {\n          envVars += `${key}=${value}\\n`;\n        }\n      }\n      SetenvVars(envVars);\n    }\n    transformJsonToEnvvar();\n  }, [jsonData]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        {isJsonWithProblem ? (\n          <p className=\"alert alert-danger\" role=\"alert\">\n            Json is with problem.\n          </p>\n        ) : (\n          \"\"\n        )}\n\n        <div className=\"mb-3\">\n          <label htmlFor=\"json\" className=\"form-label\">\n            Json\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"jsonData\"\n            value={jsonData}\n            onChange={jsonDataChange}\n            rows=\"20\"\n          ></textarea>\n        </div>\n      </div>\n      <div className=\"col\">\n        <div className=\"mb-3\">\n          <label htmlFor=\"envVars\" className=\"form-label\">\n            envVars\n          </label>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            style={{ \"margin-left\": \"10px\" }}\n            onClick={onClickCopy}\n          >\n            <i className=\"fa fa-copy\" style={{ \"padding-right\": \"5px\" }}></i>\n            Copy\n          </button>\n          <textarea\n            className=\"form-control\"\n            id=\"envVars\"\n            value={envVars}\n            readOnly\n            rows=\"20\"\n          ></textarea>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JsonToEnvvar;\n","export const jsonDataExample = '{ \"name\": \"John\", \"age\": 30, \"car\": null }';\n","import \"./App.css\";\nimport JsonToEnvvar from \"./jsonToEnvvar.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <JsonToEnvvar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}